# networks:
#   sandcat-net:
#     driver: host
services:
  # sandcat-backend:
  #   build: .
  #   container_name: sandcat-backend
  #   ports:
  #     - '50000:50000' # websocket
  #     - '50001:50001' # server
  #     - '50002:50002' # rpc.ws
  #     - '50003:50003' # rpc.chat
  #     - '50004:50004' # rpc.db
  #     - '50005:50005' # rpc.pusher
  #   volumes:
  #     - './config-docker.yml:/usr/local/bin/config.yml'
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #     synapse:
  #       condition: service_started
  #     redis:
  #       condition: service_started
  #     mongodb:
  #       condition: service_started
  #     postgres:
  #       condition: service_started
  #     minio:
  #       condition: service_started
  #   networks:
  #     - sandcat-net

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami/kafka/data'
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    # networks:
      # - sandcat-net

  synapse:
    image: xuxiaomeng/synapse:latest
    container_name: synapse
    ports:
      - "8500:8500"
    environment:
      - SERVICE_ADDRESS=0.0.0.0:8500
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # networks:
    #   - sandcat-net

  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'
    # networks:
    #   - sandcat-net

  mongodb:
    image: 'mongo:latest'
    ports:
      - '27017:27017'
    volumes:
      - 'mongodata:/data/db'
    # networks:
    #   - sandcat-net

  postgres:
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=im
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    # networks:
    #   - sandcat-net

  minio:
    image: 'minio/minio:latest'
    ports:
      - '9000:9000' # 将MinIO API端口映射到主机的9000端口
      - '9001:9001' # 将MinIO Console管理界面映射到主机的9001端口
    environment:
      MINIO_ROOT_USER: minioadmin # 最新的MinIO版本中推荐使用MINIO_ROOT_USER和MINIO_ROOT_PASSWORD
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001" # 添加控制台地址的映射
    volumes:
      - 'miniodata:/data'
    # networks:
    #   - sandcat-net

volumes:
  mongodata:
  miniodata:
  postgres_data:
  kafka_data:
    driver: local
